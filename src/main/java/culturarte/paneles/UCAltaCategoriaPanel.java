/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package culturarte.paneles;



/*
 Pasos para cambiar el tamaño de este panel:
 1) Abrir este archivo: UCAltaCategoriaPanel.java
2) En el constructor (UCAltaCategoriaPanel), modificar la dimensión en setPreferredSize:
   this.setPreferredSize(new java.awt.Dimension(W, H));
   donde W es el ancho y H la altura en píxeles.
3) Recompilar el proyecto (mvn/gradle/NetBeans) y ejecutar para probar.
*/

import javax.swing.JOptionPane;
import culturarte.casosuso.Categoria;
import culturarte.casosuso.CategoriaService;
import java.awt.FlowLayout;
import java.awt.BorderLayout;

/**
 *
 * @author tecnologo
 */
public class UCAltaCategoriaPanel extends javax.swing.JPanel {

    /**
     * Creates new form UCAltaCategoriaPanel
     */
    public UCAltaCategoriaPanel() {
        initComponents();
        // --- Tamaño predeterminado: 1000 x 1000 ---
        // Para cambiarlo: editar esta línea o seguir los pasos en el README dentro del proyecto.
        this.setPreferredSize(new java.awt.Dimension(500, 100));

                // <assistant-fixed-sizes> Ajustes de tamaño para mantener la misma lógica visual (labels a la izquierda, botones abajo, tamaños fijos)
        try {
            // intentar ajustar jPanel1 mediante reflection (si existe)
            try {
                java.lang.reflect.Field fPanel = this.getClass().getDeclaredField("jPanel1");
                fPanel.setAccessible(true);
                Object p = fPanel.get(this);
                if (p instanceof javax.swing.JPanel) {
                    javax.swing.JPanel panel = (javax.swing.JPanel)p;
                    try { panel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10)); } catch (Exception ex) {}
                    try { panel.setPreferredSize(new java.awt.Dimension(760,480)); } catch (Exception ex) {}
                }
            } catch (Exception ex) { /* no jPanel1 en este panel */ }

            // etiquetas: tamaño consistente vía reflection
            for (int i=1;i<=20;i++) {
                try {
                    java.lang.reflect.Field f = this.getClass().getDeclaredField("jLabel"+i);
                    f.setAccessible(true);
                    Object obj = f.get(this);
                    if (obj instanceof javax.swing.JLabel) {
                        try { ((javax.swing.JLabel)obj).setPreferredSize(new java.awt.Dimension(120,20)); } catch (Exception e) {}
                    }
                } catch (Exception e) {}
            }

            // campos de texto / areas comunes: aumentar columnas/preferred size si existen
            String[] textFields = new String[] { "txtNombre","txtApellido","txtEmail","txtFecha","txtNickname","txtDireccion","txtWeb","txtLugar","txtCosto","txtDuracion","txtGenero","txtTelefono","txtBiografia" };
            for (String nm: textFields) {
                try {
                    java.lang.reflect.Field f = this.getClass().getDeclaredField(nm);
                    f.setAccessible(true);
                    Object obj = f.get(this);
                    if (obj instanceof javax.swing.JTextField) {
                        try { ((javax.swing.JTextField)obj).setColumns(20); ((javax.swing.JTextField)obj).setPreferredSize(new java.awt.Dimension(200,24)); } catch (Exception ex) {}
                    } else if (obj instanceof javax.swing.JTextArea) {
                        try { ((javax.swing.JTextArea)obj).setColumns(20); ((javax.swing.JTextArea)obj).setPreferredSize(new java.awt.Dimension(400,100)); } catch (Exception ex) {}
                    } else if (obj instanceof javax.swing.JComboBox) {
                        try { ((javax.swing.JComboBox)obj).setPreferredSize(new java.awt.Dimension(200,24)); } catch (Exception ex) {}
                    }
                } catch (Exception e) {}
            }

            // botones: forzar tamaño y ubicacion en jPanel2 si existe
            try {
                java.lang.reflect.Field f2 = this.getClass().getDeclaredField("jPanel2");
                f2.setAccessible(true);
                Object p2 = f2.get(this);
                if (p2 instanceof javax.swing.JPanel) {
                    try { ((javax.swing.JPanel)p2).setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 10)); } catch (Exception ex) {}
                }
            } catch (Exception e) {}
        } catch (Exception e) {
            // no hacer nada si falla
        }
        // </assistant-fixed-sizes>

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();

        jLabel1.setText("Nombre:");
        jPanel1.add(jLabel1);

        txtNombre.setColumns(20);
        // campo carpeta (ruta donde se guardará la categoría)
        javax.swing.JLabel jLabelCarpeta = new javax.swing.JLabel();
        jLabelCarpeta.setText("Categoría padre:");
        jPanel1.add(jLabelCarpeta);

        txtCarpeta = new javax.swing.JTextField();
        txtCarpeta.setColumns(20);
        txtCarpeta.setEditable(false);
        jPanel1.add(txtCarpeta);

        btnSeleccionarCarpeta = new javax.swing.JButton();
        btnSeleccionarCarpeta.setText("Seleccionar categoría");
        btnSeleccionarCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarCarpetaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSeleccionarCarpeta);
    
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombre);

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrear);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    
    
    private void btnSeleccionarCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarCarpetaActionPerformed
        try {
            // Abrir selector de categorías (árbol) para elegir categoría padre
            culturarte.util.CategoriaTreeSelector selector = new culturarte.util.CategoriaTreeSelector();
            // cargar categorías existentes desde servicio
            java.util.List<culturarte.casosuso.Categoria> cats = new java.util.ArrayList<>();
            try {
                cats = new culturarte.casosuso.CategoriaService().findAll();
            } catch (Exception svcEx) {
                // si falla, pasar lista vacía (el selector tendrá la plantilla)
            }
            selector.setCategories(cats);
            // preseleccionar si ya había una selección en txtCarpeta
            String cur = txtCarpeta.getText();
            if (cur != null && cur.contains(":")) selector.setSelectedItem(cur);
            javax.swing.JOptionPane pane = new javax.swing.JOptionPane();
            pane.setMessage(selector);
            pane.setMessageType(javax.swing.JOptionPane.PLAIN_MESSAGE);
            javax.swing.JDialog dialog = pane.createDialog(this, "Seleccionar categoría padre");
            dialog.setModal(true);
            dialog.setVisible(true);
            Object sel = selector.getSelectedItem();
            if (sel != null) {
                // sel expected as "ID:Nombre"
                String s = sel.toString();
                txtCarpeta.setText(s);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "No se pudo seleccionar la categoría: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnSeleccionarCarpetaActionPerformed

private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
    String nombre = txtNombre.getText().trim();
    if (nombre.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nombre requerido");
        return;
    }
    try {
        culturarte.casosuso.CategoriaService cs = new culturarte.casosuso.CategoriaService();
        culturarte.casosuso.Categoria c = new culturarte.casosuso.Categoria();
        c.setNombre(nombre);

        // Si se seleccionó una categoría padre en el selector, asignarla a la nueva categoría
        try {
            String sel = txtCarpeta != null ? txtCarpeta.getText() : null;
            if (sel != null && sel.contains(":")) {
                String pid = sel.split(":",2)[0];
                try {
                    culturarte.casosuso.Categoria padre = null;
                    java.util.List<culturarte.casosuso.Categoria> allCats = cs.findAll();
                    if (allCats != null) {
                        for (culturarte.casosuso.Categoria cc : allCats) {
                            if (cc != null && pid.equals(cc.getId())) { padre = cc; break; }
                        }
                    }
                    if (padre != null) c.setPadre(padre);
                } catch (Exception exPadre) {
                    // ignore: no parent set
                }
            }
        } catch (Exception exx) { /* ignore */ }

        
        // Si no se proporcionó id, generamos uno único a partir del nombre
        try {
            if (c.getId() == null || c.getId().trim().isEmpty()) {
                String base = nombre.replaceAll("[^A-Za-z0-9]", "");
                if (base.length() == 0) base = java.util.UUID.randomUUID().toString().replaceAll("-", "");
                base = base.length() > 6 ? base.substring(0,6) : base;
                base = base.toUpperCase();
                java.util.List<culturarte.casosuso.Categoria> existing = cs.findAll();
                String candidate = base;
                int suffix = 1;
                boolean ok = false;
                while (!ok) {
                    ok = true;
                    if (existing != null) {
                        for (culturarte.casosuso.Categoria ex : existing) {
                            if (ex != null && candidate.equalsIgnoreCase(ex.getId())) { ok = false; break; }
                        }
                    }
                    if (!ok) {
                        candidate = base + String.format("%02d", suffix);
                        suffix++;
                        if (suffix > 999) {
                            candidate = java.util.UUID.randomUUID().toString().replaceAll("-", "").substring(0,8);
                            break;
                        }
                    }
                }
                c.setId(candidate);
            }
        } catch (Exception exId) {
            // si algo falla, ponemos un UUID simple
            try { c.setId(java.util.UUID.randomUUID().toString()); } catch (Exception ignore) {}
        }
cs.save(c);
        JOptionPane.showMessageDialog(this, "Categoría creada (JPA)");
        // limpio campos
        txtNombre.setText("");
        txtCarpeta.setText("");

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}//GEN-LAST:event_btnCrearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnSeleccionarCarpeta;
    private javax.swing.JTextField txtCarpeta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}